import Head from 'next/head';
import Image from 'next/image';
import React, { useEffect, useState } from 'react';
import { Inter } from 'next/font/google';
import styles from '@/styles/layout.module.css';
import {
  ContainerOutlined,
  DashboardOutlined,
  DeliveredProcedureOutlined,
  DollarOutlined,
  MenuFoldOutlined,
  MenuUnfoldOutlined,
  ProjectOutlined,
  SearchOutlined,
  TeamOutlined,
  UsergroupAddOutlined,
  UserOutlined,
} from '@ant-design/icons';
import { Button, Input, Layout, Menu, Space, theme } from 'antd';
import type { MenuProps } from 'antd';
import { useRouter } from 'next/router';

const inter = Inter({ subsets: ['latin'] });
const { Header, Sider, Content } = Layout;

type MenuItem = Required<MenuProps>['items'][number];

function getItem(
  label: React.ReactNode,
  key: React.Key,
  icon?: React.ReactNode,
  children?: MenuItem[],
): MenuItem {
  return {
    key,
    icon,
    children,
    label,
  } as MenuItem;
}

const items: MenuItem[] = [
  getItem('Tổng quan', 'dashboard', <DashboardOutlined />),
  getItem('Danh sách người dùng', 'manage-users', <UserOutlined />),
  getItem('Vai trò & Quyền', 'roles-permissions', <TeamOutlined />, [
    getItem('Vai trò', 'roles'),
    getItem('Quyền', 'permissions'),
  ]),

  getItem('Nhân sự', 'personnels', <UsergroupAddOutlined />),
  getItem('Kho & Sản phẩm', 'warehouses', <DeliveredProcedureOutlined />, [
    getItem('Kho', 'warehouses'),
    getItem('Sản phẩm', 'products'),
  ]),
  getItem('Chấm công & Lương', 'timekeepings', <DollarOutlined />, [
    getItem('Chấm công', 'timekeeping'),
    getItem('Lương', 'salary'),
  ]),
  getItem('Dự án & Công việc', 'projects', <ProjectOutlined />, [
    getItem('Dự án', 'projects'),
    getItem('Công việc', 'tasks'),
  ]),
  getItem('Đơn hàng & Xuất nhập', 'orders', <ContainerOutlined />, [
    getItem('Đơn hàng', 'orders'),
    getItem('Xuất nhập', 'import-and-export'),
  ]),
];

export default function LayoutApp({ children }: any) {
  const [collapsed, setCollapsed] = useState(false);
  const [listSider, setListSider] = useState([
    'dashboard',
    'manage-users',
    'permissions',
    'roles',
    'personnels',
    'warehouses',
    'products',
    'timekeeping',
    'salary',
    'projects',
    'tasks',
    'orders',
    'import-and-export',
  ]);
  const {
    token: { colorBgContainer, borderRadiusLG },
  } = theme.useToken();
  const router = useRouter();
  const [hasMounted, setHasMounted] = useState(false);

  useEffect(() => {
    setHasMounted(true);
  }, []);

  const handleChangeValueSider = (value: string) => {
    if (listSider.includes(value)) {
      router.push(`/${value != 'dashboard' ? value : ''}`);
    } else {
      router.push('404');
    }
  };

  if (!hasMounted) return null;
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.container}>
        <Layout style={{ minHeight: '100vh' }} hasSider>
          <Sider
            trigger={null}
            collapsible
            collapsed={collapsed}
            className={styles.siderContainer}
            style={{
              overflowY: 'auto',
              height: '100vh',
              position: 'fixed',
              left: 0,
              top: 0,
              bottom: 0,
            }}
            width={260}>
            {/* <div className="demo-logo-vertical">xin chào ..</div> */}
            <Menu
              className={'custom-menu'}
              mode="inline"
              defaultSelectedKeys={['dashboard']}
              items={items}
              onSelect={({ key }) => handleChangeValueSider(key)}
            />
          </Sider>
          <Layout
            style={{
              flex: 1,
              minWidth: 0,
              marginLeft: collapsed ? 80 : 260,
              transition: 'all 0.2s, background 0s',
            }}>
            <Header
              className={styles.headerRight}
              style={{
                background: '#2b2e3e',
              }}>
              <div className={styles.searchContainer}>
                <Button
                  type="text"
                  icon={
                    collapsed ? (
                      <MenuUnfoldOutlined style={{ color: 'white' }} />
                    ) : (
                      <MenuFoldOutlined style={{ color: 'white' }} />
                    )
                  }
                  onClick={() => setCollapsed(!collapsed)}
                  style={{
                    fontSize: '16px',
                    width: 64,
                    height: 64,
                  }}
                />
                <Space.Compact
                  style={{ width: '100%' }}
                  className={styles.search}>
                  <Input placeholder="Tìm kiếm" />
                  <Button>
                    <SearchOutlined />
                  </Button>
                </Space.Compact>
              </div>
              <div className={styles.profile}>
                <Image
                  src={
                    'https://res.cloudinary.com/dzxupp48t/image/upload/v1750331385/image-ERP/trssjrrwj5hmk7hibu1v.webp'
                  }
                  alt="image-user"
                  width={40}
                  height={40}
                />
              </div>
            </Header>
            <Content
              style={{
                margin: '24px 16px',
                padding: 24,
                minHeight: 280,
                background: colorBgContainer,
                borderRadius: borderRadiusLG,
              }}>
              {children}
            </Content>
          </Layout>
        </Layout>
      </div>
    </>
  );
}
