name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    
  # start:

  #   runs-on: ubuntu-latest

  #   services:
  #     mysql:
  #       image: mysql:8
  #       env:
  #         MYSQL_ROOT_PASSWORD: loc123
  #         MYSQL_DATABASE: erp_mini
  #       ports:
  #         - 3306:3306
  #       options: >-
  #         --health-cmd="mysqladmin ping --silent"
  #         --health-interval=10s
  #         --health-timeout=10s
  #         --health-retries=3

  #   strategy:
  #     matrix:
  #       node-version: [18.x, 20.x, 22.x]

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #   - run: npm ci
  #   - run: npm run start --if-present
    
  # test:

  #   runs-on: ubuntu-latest

  #   strategy:
  #     matrix:
  #       node-version: [18.x, 20.x, 22.x]

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #   - run: npm ci
  #   - run: npm test
